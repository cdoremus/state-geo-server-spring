buildscript {
	ext {
		springBootVersion = '1.4.0.M1'
		springSecurityVersion = '4.0.4.RELEASE'
		springVersion = '4.2.5.RELEASE'
	}
    repositories {
        maven {url "http://repo.spring.io/snapshot" }
        maven {url "http://repo.spring.io/milestone" }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
//apply plugin: 'idea'
apply plugin: 'spring-boot'
//apply plugin: 'jetty'
apply plugin: 'war'
apply plugin: 'distribution'

sourceCompatibility = 1.8
targetCompatibility = 1.8


war {
    baseName = 'state-geo-quiz'
    version =  '1.0.0'
}

repositories {
    mavenCentral()
//    jcenter()
        maven {url "http://repo.spring.io/snapshot" }
        maven {url "http://repo.spring.io/milestone" }
}

configurations {
	providedRuntime
//    compile.exclude module: "spring-boot-starter-tomcat"

}

dependencies {

	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.data:spring-data-rest-webmvc")
	runtime('org.apache.derby:derby')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile("org.springframework.boot:spring-boot-starter-tomcat")
	
    compile 'org.threeten:threetenbp:1.3'
	compile 'javax.inject:javax.inject:1'
	
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}

task stage {
  dependsOn installDist
}

task copyToLib(type: Copy) {
    into "$buildDir/lib"
    from('src/main/webapp/static/*.*')
}

stage.dependsOn(copyToLib)

